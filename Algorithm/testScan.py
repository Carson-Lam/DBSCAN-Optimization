import numpy as np
import matplotlib.pyplot as plt
from OldDBSCAN import euclidean_distance, DBSCAN
from testData import generate_data

# Obtain test data (In numpy array format)
data = generate_data()

# Set radius for cluster detection (epsilon)
eps = 1.0

# Set minimum amount of points in radius for cluster
minPts = 5

# Run DBSCAN
labels = DBSCAN(data, euclidean_distance, eps, minPts) # Retrieve dictionary of tuple keys and values generated by DBSCAN

label_values = [labels[tuple(point)] for point in data] # Converts data (numpy array) to hashable tuples for searching in labels
                                                        # Finds matching values of each data element's tuple key in labels
                                                        # Collects these matching values 


# Plot results
plt.scatter(data[:, 0], data[:, 1], c=label_values, cmap='tab20', edgecolor='k')
plt.title("DBSCAN Clustering Results")
plt.show()

## DEBUG ##

# Print the labels dictionary
# print("Labels dictionary:")
# print(labels)

# Print the label values dictionary
print("Label values:")
print(label_values)